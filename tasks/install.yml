---

- name:  Copy templates
  template:
    src: 'packagist/{{ item }}.j2'
    dest: '{{ packagist_path }}/{{ item }}'
  with_items:
    - 'app/config/parameters.yml'
    - 'app/config/config.yml'

- name: Install composer packages
  environment:
    COMPOSER_CACHE_DIR: '{{ packagist_path }}/vendor/.cache'
  composer:
    command: install
    working_dir: '{{ packagist_path }}'
  become_user: '{{ packagist_user }}'

- name: Validate packagist schema
  shell: "app/console doctrine:schema:validate"
  become_user: '{{ packagist_user }}'
  failed_when: no
  changed_when: no
  args:
    chdir: /srv/packagist
  register: packagist_schema_status

- name: Create packagist schema
  shell: "app/console doctrine:schema:create"
  become_user: '{{ packagist_user }}'
  args:
    chdir: /srv/packagist
  when: '"[Database] OK" not in packagist_schema_status.stdout'

- name: Clear Production Packagist Cache
  shell: "app/console cache:clear --env=prod"
  become_user: '{{ packagist_user }}'
  when: packagist_download_status.changed
  args:
    chdir: /srv/packagist

- name: Install web assets
  shell: app/console assets:install web
  become_user: '{{ packagist_user }}'
  when: packagist_download_status.changed
  args:
    chdir: /srv/packagist

- name: Query sql
  shell: 'app/console doctrine:query:sql "select username from fos_user;"'
  become_user: '{{ packagist_user }}'
  changed_when: no
  args:
    chdir: /srv/packagist
  register: packagist_users_status

- name: Create user
  become: true
  become_user: "{{ packagist_user }}"
  args:
    chdir: "{{ packagist_path }}"
  shell: "app/console fos:user:create {{ item.name }} {{ item.email }} {{ item.password|default(item.name) }}"
  when: item.name not in packagist_users_status.stdout and item.name|default(False) and item.email|default(False)
  with_items: "{{ packagist_users }}"
